type Query {
  posts: [Post!]!
  post(id: ID!): Post!
  users: [User!]!
  user(id: ID!): User!
  comments: [Comment!]!
  comment(id: ID!): Comment!
}

type Post {
  id: ID!
  title: String
  content: Float
  user: User
  comments: [Comment!]!
}

type User {
  id: ID!
  name: String
  posts: [Post!]!
}

type Comment {
  id: ID!
  text: String
  user: User
  post: Post
}

type Mutation {
  createPost(input: CreatePostInput!): Post!
  updatePost(id: ID!, input: UpdatePostInput!): Post!
  createUser(input: CreateUserInput!): User!
  updateUser(id: ID!, input: UpdateUserInput!): User!
  createComment(input: CreateCommentInput!): Comment!
  updateComment(id: ID!, input: UpdateCommentInput!): Comment!
}

input CreatePostInput {
  title: String!
  content: Float!
  user_id: ID!
}

input UpdatePostInput {
  title: String
  content: Float
  user_id: ID
}

input CreateUserInput {
  name: String!
}

input UpdateUserInput {
  name: String
}

input CreateCommentInput {
  text: String!
  user_id: ID!
  post_id: ID!
}

input UpdateCommentInput {
  text: String
  user_id: ID
  post_id: ID
}