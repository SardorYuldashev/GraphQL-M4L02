type Query {
  groups: [Group!]!
  group(id: ID!): Group!
  users: [User!]!
  user(id: ID!): User
}

type User {
  id: ID!
  first_name: String
  last_name: String
  groups: [Group!]!
  full_name: String
}

type Group {
  id: ID!
  name: String
  users: [User!]!
}

type Mutation {
  createGroup(input: CreateGroupInput!): Group!
  updateGroup(id: ID!, input: UpdateGroupInput!): Group!
  createUser(input: CreateUserInput!): User!
  addUserForGroup(input: AddUserForGroup!): String!
}

input CreateGroupInput {
  name: String!
}

input UpdateGroupInput {
  name: String
}

input CreateUserInput {
  first_name: String!
  last_name: String!
}

input AddUserForGroup {
  user_id: ID!
  group_id: ID!
}